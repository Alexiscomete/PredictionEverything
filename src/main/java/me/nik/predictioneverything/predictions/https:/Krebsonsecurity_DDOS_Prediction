package me.nik.predictioneverything.predictions;

public final class Brennhaus_aka_OVH_Prediction {

    private boolean running = !running;

    public void run() {
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
        if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;v    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;
    if(running) return;v
    /*
    status codes: -1 ddos
    -2 = black ddos (no strong)
    
    */
    System.exit(running ? -1 : -2)
    }

}
